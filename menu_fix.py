"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä—Å–æ–Ω—ã - –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
–æ–ø—Ü–∏–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–æ–¥–º–µ–Ω—é, –∞ –Ω–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é.
"""
from __future__ import annotations
import logging
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes, ConversationHandler
from db import PersonaConfig, get_db
import handlers as _h

_logger = logging.getLogger(__name__)

# –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–µ–Ω—é
_original_edit_max_messages_prompt = _h.edit_max_messages_prompt
_original_show_edit_wizard_menu = _h._show_edit_wizard_menu

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä—Å–æ–Ω—ã
async def fixed_show_edit_wizard_menu(update: Update, context: ContextTypes.DEFAULT_TYPE, persona_config: PersonaConfig) -> int:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π."""
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    query = update.callback_query
    message = update.effective_message if not query else query.message
    chat_id = message.chat.id
    persona_id = persona_config.id
    user_id = update.effective_user.id

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    val = persona_config.max_response_messages
    if val == 1:
        label = "–ü–æ–º–µ–Ω—å—à–µ"
    elif val == 3:
        label = "–°—Ç–∞–Ω–¥–∞—Ä—Ç"
    elif val == 6:
        label = "–ü–æ–±–æ–ª—å—à–µ"
    else:
        label = "–°–ª—É—á–∞–π–Ω–æ"

    # –°–ª–æ–≤–∞—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    style_map = {
        "neutral": "–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π", 
        "friendly": "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π", 
        "sarcastic": "–°–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π", 
        "formal": "–§–æ—Ä–º–∞–ª—å–Ω—ã–π", 
        "brief": "–ö—Ä–∞—Ç–∫–∏–π"
    }
    verbosity_map = {
        "concise": "–õ–∞–∫–æ–Ω–∏—á–Ω—ã–π", 
        "medium": "–°—Ä–µ–¥–Ω–∏–π", 
        "talkative": "–ú–Ω–æ–≥–æ—Å–ª–æ–≤–Ω—ã–π"
    }
    group_reply_map = {
        "always": "–í—Å–µ–≥–¥–∞", 
        "mentioned_only": "–ü–æ @", 
        "mentioned_or_contextual": "–ü–æ @ / –ö–æ–Ω—Ç–µ–∫—Å—Ç—É", 
        "never": "–ù–∏–∫–æ–≥–¥–∞"
    }
    media_react_map = {
        "all": "–¢–µ–∫—Å—Ç+GIF", 
        "text_only": "–¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç", 
        "none": "–ù–∏–∫–∞–∫", 
        "photo_only": "–¢–æ–ª—å–∫–æ —Ñ–æ—Ç–æ", 
        "voice_only": "–¢–æ–ª—å–∫–æ –≥–æ–ª–æ—Å"
    }
    
    # –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    style_value = style_map.get(persona_config.communication_style, "–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π")
    verbosity_value = verbosity_map.get(persona_config.verbosity_level, "–°—Ä–µ–¥–Ω–∏–π")
    group_reply_value = group_reply_map.get(persona_config.group_reply_preference, "–ü–æ @ / –ö–æ–Ω—Ç–µ–∫—Å—Ç—É")
    media_reaction_value = media_react_map.get(persona_config.media_reaction, "–¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç")

    # –°—Ç—Ä–æ–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∏ –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    keyboard = [
        [
            InlineKeyboardButton("‚úèÔ∏è –ò–º—è", callback_data="edit_wizard_name"),
            InlineKeyboardButton("üìú –û–ø–∏—Å–∞–Ω–∏–µ", callback_data="edit_wizard_description")
        ],
        [InlineKeyboardButton(f"üí¨ –°—Ç–∏–ª—å ({style_value})", callback_data="edit_wizard_comm_style")],
        [InlineKeyboardButton(f"üó£Ô∏è –†–∞–∑–≥–æ–≤–æ—Ä—á–∏–≤–æ—Å—Ç—å ({verbosity_value})", callback_data="edit_wizard_verbosity")],
        [InlineKeyboardButton(f"üë• –û—Ç–≤–µ—Ç—ã –≤ –≥—Ä—É–ø–ø–µ ({group_reply_value})", callback_data="edit_wizard_group_reply")],
        [InlineKeyboardButton(f"üñºÔ∏è –†–µ–∞–∫—Ü–∏—è –Ω–∞ –º–µ–¥–∏–∞ ({media_reaction_value})", callback_data="edit_wizard_media_reaction")],
        [InlineKeyboardButton(f"üó®Ô∏è –ú–∞–∫—Å. —Å–æ–æ–±—â. ({label})", callback_data="edit_wizard_max_msgs")],
        [InlineKeyboardButton(f"üé≠ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏—è", callback_data="edit_wizard_moods")],
        [InlineKeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="finish_edit")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    msg_text = f"‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏—á–Ω–æ—Å—Ç–∏: {_h.escape_markdown_v2(persona_config.name)}* \\(ID: `{persona_id}`\\)\n\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å:"

    try:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –Ω–∞ –æ—à–∏–±–∫–∏
        try:
            if query and query.message:
                # –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                try:
                    await query.edit_message_text(msg_text, reply_markup=reply_markup, parse_mode=_h.ParseMode.MARKDOWN_V2)
                    context.user_data['edit_message_id'] = query.message.message_id
                    context.user_data['edit_chat_id'] = chat_id
                    return _h.EDIT_WIZARD_MENU
                except Exception as edit_err:
                    _logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {edit_err}. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
                    # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            
            # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
            if context.user_data.get('last_prompt_message_id'):
                try:
                    await context.bot.delete_message(chat_id=chat_id, message_id=context.user_data['last_prompt_message_id'])
                except Exception as del_err:
                    _logger.warning(f"Could not delete previous prompt message: {del_err}")
                context.user_data.pop('last_prompt_message_id', None)
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
            sent_message = await context.bot.send_message(chat_id, msg_text, reply_markup=reply_markup, parse_mode=_h.ParseMode.MARKDOWN_V2)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            context.user_data['edit_message_id'] = sent_message.message_id
            context.user_data['edit_chat_id'] = chat_id
            context.user_data['wizard_menu_message_id'] = sent_message.message_id
        except Exception as menu_e:
            _logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω—ã {persona_id}: {menu_e}")
            try:
                await context.bot.send_message(chat_id, _h.escape_markdown_v2("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."), parse_mode=_h.ParseMode.MARKDOWN_V2)
            except Exception:
                await context.bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return ConversationHandler.END
    except Exception as e:
        _logger.error(f"Error showing wizard menu for persona {persona_id}: {e}")
        await context.bot.send_message(chat_id, _h.escape_markdown_v2("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é."), parse_mode=_h.ParseMode.MARKDOWN_V2)
        return ConversationHandler.END

    return _h.EDIT_WIZARD_MENU

# –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
_h._show_edit_wizard_menu = fixed_show_edit_wizard_menu

_logger.info("menu_fix: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä—Å–æ–Ω—ã.")
